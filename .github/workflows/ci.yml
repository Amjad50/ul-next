# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download system deps
        run: sudo apt update -y && sudo apt install -y cmake
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-audit
      - name: Check audit
        run: cargo audit
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Check clippy hack
        run: cargo hack --feature-powerset --at-least-one-of linked,appcore_linked,loaded clippy -- -D warnings
      - name: Build
        run: cargo build --all-features
      - name: Test
        run: cargo test --all-features
      - name: Test PNG example
        run: cargo r --example=render_to_png
  verify_msrv:
    name: Verify Minimum Supported Rust Version in Cargo.toml
    runs-on: ubuntu-latest
    steps:
      - name: Download system deps
        run: sudo apt update -y && sudo apt install -y cmake
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.70.0
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Verify Minimum Rust Version
        run: cargo check
